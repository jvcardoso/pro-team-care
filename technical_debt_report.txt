================================================================================
RELATÓRIO DE DÍVIDA TÉCNICA - PRO TEAM CARE
================================================================================

📊 ESTATÍSTICAS GERAIS
----------------------------------------
Arquivos Python analisados: 95
Arquivos com análise de complexidade: 73
Duplicatas entre arquivos encontradas: 531

🧠 ANÁLISE DE COMPLEXIDADE
----------------------------------------
📁 validate_apis.py
  Funções: 9
  Complexidade total: 81
  Funções de alta complexidade (>10): 4
  🔴 Funções críticas:
    - APIValidator (complexidade: 12, linha: 23)
    - _parse_file (complexidade: 23, linha: 39)
    - find_similar_functionality (complexidade: 20, linha: 133)
    - generate_report (complexidade: 14, linha: 171)

📁 reset_admin_password.py
  Funções: 2
  Complexidade total: 3
  Funções de alta complexidade (>10): 0

📁 debug_db.py
  Funções: 1
  Complexidade total: 7
  Funções de alta complexidade (>10): 0

📁 create_admin_user.py
  Funções: 1
  Complexidade total: 3
  Funções de alta complexidade (>10): 0

📁 alembic/env.py
  Funções: 4
  Complexidade total: 4
  Funções de alta complexidade (>10): 0

📁 alembic/versions/3eb1e8fb6842_initial_migration_reverse_engineering_.py
  Funções: 2
  Complexidade total: 2
  Funções de alta complexidade (>10): 0

📁 alembic/versions/4c47259799c2_initial_sync_with_existing_database_.py
  Funções: 2
  Complexidade total: 2
  Funções de alta complexidade (>10): 0

📁 alembic/versions/f6c3a4d2e4db_add_enrichment_fields_to_addresses.py
  Funções: 2
  Complexidade total: 2
  Funções de alta complexidade (>10): 0

📁 tests/test_validators_simple.py
  Funções: 26
  Complexidade total: 92
  Funções de alta complexidade (>10): 0

📁 tests/test_health.py
  Funções: 5
  Complexidade total: 27
  Funções de alta complexidade (>10): 0

📁 tests/test_validators.py
  Funções: 35
  Complexidade total: 121
  Funções de alta complexidade (>10): 0

📁 tests/test_menus.py
  Funções: 21
  Complexidade total: 89
  Funções de alta complexidade (>10): 0

📁 tests/test_companies.py
  Funções: 14
  Complexidade total: 48
  Funções de alta complexidade (>10): 0

📁 tests/test_auth.py
  Funções: 7
  Complexidade total: 31
  Funções de alta complexidade (>10): 0

📁 tests/test_companies_integration.py
  Funções: 10
  Complexidade total: 43
  Funções de alta complexidade (>10): 0

📁 tests/conftest.py
  Funções: 7
  Complexidade total: 10
  Funções de alta complexidade (>10): 0

📁 tests/test_menus_integration.py
  Funções: 11
  Complexidade total: 42
  Funções de alta complexidade (>10): 0

📁 tests/test_repositories.py
  Funções: 6
  Complexidade total: 26
  Funções de alta complexidade (>10): 0

📁 tests/test_monitoring.py
  Funções: 8
  Complexidade total: 42
  Funções de alta complexidade (>10): 0

📁 tests/test_main.py
  Funções: 3
  Complexidade total: 11
  Funções de alta complexidade (>10): 0

📁 tests/test_security_middleware.py
  Funções: 41
  Complexidade total: 146
  Funções de alta complexidade (>10): 0

📁 tests/test_companies_endpoints.py
  Funções: 31
  Complexidade total: 112
  Funções de alta complexidade (>10): 0

📁 tests/test_security_basic.py
  Funções: 24
  Complexidade total: 77
  Funções de alta complexidade (>10): 0

📁 tests/architecture/test_clean_architecture.py
  Funções: 16
  Complexidade total: 78
  Funções de alta complexidade (>10): 0

📁 app/main.py
  Funções: 5
  Complexidade total: 10
  Funções de alta complexidade (>10): 0

📁 app/utils/validators.py
  Funções: 5
  Complexidade total: 33
  Funções de alta complexidade (>10): 1
  🔴 Funções críticas:
    - validate_contacts_quality (complexidade: 12, linha: 103)

📁 app/application/dto/user_dto.py
  Funções: 3
  Complexidade total: 3
  Funções de alta complexidade (>10): 0

📁 app/application/dto/company_dto.py
  Funções: 5
  Complexidade total: 5
  Funções de alta complexidade (>10): 0

📁 app/application/use_cases/create_company_use_case.py
  Funções: 5
  Complexidade total: 12
  Funções de alta complexidade (>10): 0

📁 app/application/use_cases/delete_company_use_case.py
  Funções: 3
  Complexidade total: 7
  Funções de alta complexidade (>10): 0

📁 app/application/use_cases/get_company_use_case.py
  Funções: 5
  Complexidade total: 11
  Funções de alta complexidade (>10): 0

📁 app/application/use_cases/auth_use_case.py
  Funções: 6
  Complexidade total: 10
  Funções de alta complexidade (>10): 0

📁 app/application/use_cases/update_company_use_case.py
  Funções: 3
  Complexidade total: 12
  Funções de alta complexidade (>10): 0

📁 app/application/interfaces/external.py
  Funções: 7
  Complexidade total: 10
  Funções de alta complexidade (>10): 0

📁 app/application/interfaces/repositories.py
  Funções: 13
  Complexidade total: 15
  Funções de alta complexidade (>10): 0

📁 app/application/interfaces/services.py
  Funções: 15
  Complexidade total: 19
  Funções de alta complexidade (>10): 0

📁 app/presentation/schemas/user_legacy.py
  Funções: 7
  Complexidade total: 7
  Funções de alta complexidade (>10): 0

📁 app/presentation/schemas/company_legacy.py
  Funções: 29
  Complexidade total: 29
  Funções de alta complexidade (>10): 0

📁 app/presentation/schemas/user.py
  Funções: 7
  Complexidade total: 7
  Funções de alta complexidade (>10): 0

📁 app/presentation/schemas/company.py
  Funções: 29
  Complexidade total: 29
  Funções de alta complexidade (>10): 0

📁 app/presentation/api/v1/health.py
  Funções: 7
  Complexidade total: 20
  Funções de alta complexidade (>10): 0

📁 app/presentation/api/v1/metrics.py
  Funções: 4
  Complexidade total: 9
  Funções de alta complexidade (>10): 0

📁 app/presentation/api/v1/auth.py
  Funções: 4
  Complexidade total: 6
  Funções de alta complexidade (>10): 0

📁 app/presentation/api/v1/menus.py
  Funções: 9
  Complexidade total: 34
  Funções de alta complexidade (>10): 2
  🔴 Funções críticas:
    - get_user_dynamic_menus (complexidade: 14, linha: 84)
    - debug_menu_structure (complexidade: 12, linha: 311)

📁 app/presentation/api/v1/cnpj.py
  Funções: 7
  Complexidade total: 38
  Funções de alta complexidade (>10): 1
  🔴 Funções críticas:
    - mapear_dados_receita (complexidade: 21, linha: 265)

📁 app/presentation/api/v1/geocoding.py
  Funções: 9
  Complexidade total: 31
  Funções de alta complexidade (>10): 0

📁 app/presentation/api/v1/companies.py
  Funções: 9
  Complexidade total: 29
  Funções de alta complexidade (>10): 0

📁 app/infrastructure/security_middleware.py
  Funções: 2
  Complexidade total: 5
  Funções de alta complexidade (>10): 0

📁 app/infrastructure/exceptions.py
  Funções: 10
  Complexidade total: 13
  Funções de alta complexidade (>10): 0

📁 app/infrastructure/auth.py
  Funções: 7
  Complexidade total: 14
  Funções de alta complexidade (>10): 0

📁 app/infrastructure/rate_limiting.py
  Funções: 3
  Complexidade total: 7
  Funções de alta complexidade (>10): 0

📁 app/infrastructure/database.py
  Funções: 2
  Complexidade total: 2
  Funções de alta complexidade (>10): 0

📁 app/infrastructure/services/auth_service.py
  Funções: 4
  Complexidade total: 5
  Funções de alta complexidade (>10): 0

📁 app/infrastructure/services/address_enrichment_service.py
  Funções: 7
  Complexidade total: 49
  Funções de alta complexidade (>10): 1
  🔴 Funções críticas:
    - enrich_address (complexidade: 24, linha: 98)

📁 app/infrastructure/cache/simplified_redis.py
  Funções: 17
  Complexidade total: 75
  Funções de alta complexidade (>10): 0

📁 app/infrastructure/cache/mock_redis.py
  Funções: 25
  Complexidade total: 61
  Funções de alta complexidade (>10): 0

📁 app/infrastructure/cache/decorators.py
  Funções: 7
  Complexidade total: 16
  Funções de alta complexidade (>10): 0

📁 app/infrastructure/monitoring/metrics.py
  Funções: 20
  Complexidade total: 27
  Funções de alta complexidade (>10): 0

📁 app/infrastructure/monitoring/middleware.py
  Funções: 8
  Complexidade total: 15
  Funções de alta complexidade (>10): 0

📁 app/infrastructure/orm/models.py
  Funções: 5
  Complexidade total: 5
  Funções de alta complexidade (>10): 0

📁 app/infrastructure/repositories/company_repository.py
  Funções: 11
  Complexidade total: 126
  Funções de alta complexidade (>10): 3
  🔴 Funções críticas:
    - CompanyRepository (complexidade: 12, linha: 17)
    - create_company (complexidade: 23, linha: 60)
    - update_company (complexidade: 58, linha: 436)

📁 app/infrastructure/repositories/user_repository.py
  Funções: 9
  Complexidade total: 16
  Funções de alta complexidade (>10): 0

📁 app/infrastructure/entities/user.py
  Funções: 1
  Complexidade total: 1
  Funções de alta complexidade (>10): 0

📁 app/domain/repositories/menu_repository.py
  Funções: 8
  Complexidade total: 40
  Funções de alta complexidade (>10): 1
  🔴 Funções críticas:
    - get_context_info (complexidade: 12, linha: 348)

📁 app/domain/repositories/user_repository.py
  Funções: 6
  Complexidade total: 7
  Funções de alta complexidade (>10): 0

📁 app/domain/entities/user.py
  Funções: 8
  Complexidade total: 10
  Funções de alta complexidade (>10): 0

📁 app/domain/entities/company.py
  Funções: 26
  Complexidade total: 70
  Funções de alta complexidade (>10): 0

📁 config/settings.py
  Funções: 14
  Complexidade total: 22
  Funções de alta complexidade (>10): 0

📁 scripts/validate_address_data.py
  Funções: 1
  Complexidade total: 15
  Funções de alta complexidade (>10): 1
  🔴 Funções críticas:
    - audit_address_data (complexidade: 15, linha: 11)

📁 scripts/test_coverage.py
  Funções: 2
  Complexidade total: 8
  Funções de alta complexidade (>10): 0

📁 scripts/coverage_smart.py
  Funções: 2
  Complexidade total: 5
  Funções de alta complexidade (>10): 0

📁 scripts/audit_company_address.py
  Funções: 1
  Complexidade total: 15
  Funções de alta complexidade (>10): 1
  🔴 Funções críticas:
    - audit_address_data (complexidade: 15, linha: 12)

📁 scripts/audit_technical_debt.py
  Funções: 8
  Complexidade total: 65
  Funções de alta complexidade (>10): 2
  🔴 Funções críticas:
    - analyze_duplicates (complexidade: 13, linha: 78)
    - generate_report (complexidade: 17, linha: 169)

📈 RESUMO GERAL DE COMPLEXIDADE
Total de funções analisadas: 698
Funções de alta complexidade: 17
Complexidade média por função: 3.1

📋 DUPLICATAS ENTRE ARQUIVOS
----------------------------------------
🔄 Linha duplicada (6 ocorrências):
  📝 from dataclasses import dataclass
  📁 Arquivos: validate_apis.py, app/application/dto/user_dto.py, app/application/dto/company_dto.py, app/infrastructure/auth.py, app/domain/entities/user.py

🔄 Linha duplicada (5 ocorrências):
  📝 from pathlib import Path
  📁 Arquivos: validate_apis.py, tests/architecture/test_clean_architecture.py, scripts/test_coverage.py, scripts/coverage_smart.py, scripts/audit_technical_debt.py

🔄 Linha duplicada (2 ocorrências):
  📝 def generate_report(self) -> str:
  📁 Arquivos: validate_apis.py, scripts/audit_technical_debt.py

🔄 Linha duplicada (17 ocorrências):
  📝 report.append(STR * NUM)
  📁 Arquivos: validate_apis.py, scripts/audit_technical_debt.py

🔄 Linha duplicada (2 ocorrências):
  📝 return STR.join(report)
  📁 Arquivos: validate_apis.py, scripts/audit_technical_debt.py

🔄 Linha duplicada (2 ocorrências):
  📝 with open(report_file, STR, encoding=STR) as f:
  📁 Arquivos: validate_apis.py, scripts/audit_technical_debt.py

🔄 Linha duplicada (3 ocorrências):
  📝 from passlib.context import CryptContext
  📁 Arquivos: reset_admin_password.py, create_admin_user.py, app/infrastructure/auth.py

🔄 Linha duplicada (2 ocorrências):
  📝 connection = await asyncpg.connect(
  📁 Arquivos: reset_admin_password.py, create_admin_user.py

🔄 Linha duplicada (2 ocorrências):
  📝 password=DB_PASSWORD,
  📁 Arquivos: reset_admin_password.py, create_admin_user.py

🔄 Linha duplicada (2 ocorrências):
  📝 database=DB_DATABASE,
  📁 Arquivos: reset_admin_password.py, create_admin_user.py

🔄 Linha duplicada (2 ocorrências):
  📝 server_settings={STR: fSTR}
  📁 Arquivos: reset_admin_password.py, create_admin_user.py

🔄 Linha duplicada (60 ocorrências):
  📝 except Exception as e:
  📁 Arquivos: reset_admin_password.py, debug_db.py, create_admin_user.py, tests/test_companies_integration.py, tests/conftest.py

🔄 Linha duplicada (2 ocorrências):
  📝 await connection.close()
  📁 Arquivos: reset_admin_password.py, create_admin_user.py

🔄 Linha duplicada (3 ocorrências):
  📝 from sqlalchemy.ext.asyncio import AsyncSession, create_async_engine
  📁 Arquivos: debug_db.py, tests/conftest.py, app/infrastructure/database.py

🔄 Linha duplicada (5 ocorrências):
  📝 from sqlalchemy import text
  📁 Arquivos: debug_db.py, tests/test_menus_integration.py, app/presentation/api/v1/health.py, app/presentation/api/v1/menus.py, app/domain/repositories/menu_repository.py

🔄 Linha duplicada (2 ocorrências):
  📝 from dotenv import load_dotenv
  📁 Arquivos: debug_db.py, config/settings.py

🔄 Linha duplicada (4 ocorrências):
  📝 row = result.fetchone()
  📁 Arquivos: debug_db.py, app/domain/repositories/menu_repository.py

🔄 Linha duplicada (14 ocorrências):
  📝 from datetime import datetime
  📁 Arquivos: create_admin_user.py, tests/test_companies.py, tests/test_companies_integration.py, tests/test_companies_endpoints.py, app/presentation/schemas/user_legacy.py

🔄 Linha duplicada (2 ocorrências):
  📝 pwd_context = CryptContext(schemes=[STR], deprecated=STR)
  📁 Arquivos: create_admin_user.py, app/infrastructure/auth.py

🔄 Linha duplicada (2 ocorrências):
  📝 from app.infrastructure.orm.models import Base
  📁 Arquivos: alembic/env.py, tests/conftest.py

📊 Total de duplicatas encontradas: 531

💡 RECOMENDAÇÕES PARA REDUÇÃO DE DÍVIDA TÉCNICA
----------------------------------------
🔴 REFACTORING CRÍTICO:
   - Quebrar funções com complexidade > 10 em funções menores
   - Aplicar padrão Strategy para lógica condicional complexa
   - Extrair métodos privados para reduzir complexidade
🟡 ELIMINAÇÃO DE DUPLICATAS:
   - Criar funções utilitárias para código comum
   - Implementar padrão Template Method
   - Usar herança ou composição para evitar duplicação

🚀 PRÓXIMOS PASSOS
----------------------------------------
1. Instalar radon: pip install radon
2. Executar análise completa: python scripts/audit_technical_debt.py
3. Priorizar refactoring das funções mais complexas
4. Implementar testes antes de refatorar
5. Revisar código duplicado e extrair abstrações

📅 Data da análise: 2025-09-04 19:02:22
================================================================================