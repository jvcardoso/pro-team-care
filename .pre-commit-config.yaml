repos:
  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
      - id: black
        language_version: python3.12
        args: [--line-length=88]

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.1.1
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503,D100,D103,D400,D205,E402,I100,I201,E501,E712,F401,E902,W291,D202,D107]
        additional_dependencies: [flake8-docstrings, flake8-import-order]
        exclude: ^(alembic/|scripts/|debug_|validate_|create_|insert_|update_|reset_|simple_test\.py|test_sprint.*\.py)

  # Python security linting
  - repo: https://github.com/pycqa/bandit
    rev: 1.8.0
    hooks:
      - id: bandit
        args: [-r, app/, -x, tests/]

  # MyPy type checking (limited scope for clean architecture)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.14.0
    hooks:
      - id: mypy
        additional_dependencies: [pydantic, fastapi, sqlalchemy]
        files: ^app/main\.py$
        exclude: ^(app/infrastructure/|app/presentation/|app/application/|app/domain/)

  # General file formatting
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-merge-conflict
      - id: check-added-large-files
        args: [--maxkb=1000]
      - id: check-case-conflict
      - id: check-docstring-first
      - id: debug-statements
      - id: requirements-txt-fixer

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        files: Dockerfile.*

  # Frontend pre-commit hooks
  - repo: local
    hooks:
      - id: frontend-lint
        name: Frontend Linting
        entry: bash -c 'cd frontend && npm run lint'
        language: system
        files: ^frontend/.*\.(js|jsx|ts|tsx)$
        require_serial: true

      - id: frontend-format
        name: Frontend Formatting
        entry: bash -c 'cd frontend && npm run format'
        language: system
        files: ^frontend/.*\.(js|jsx|ts|tsx|json|css|md)$
        require_serial: true

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: |
          (?x)^(
              .*\.lock$|
              .*\.min\.(js|css)$|
              package-lock\.json$|
              yarn\.lock$
          )$

  # SQL formatting and linting
  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 3.0.3
    hooks:
      - id: sqlfluff-lint
        files: \.sql$
        args: [--dialect=postgres]

      - id: sqlfluff-fix
        files: \.sql$
        args: [--dialect=postgres, --force]

  # Commit message formatting
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [optional-scope]

default_language_version:
  python: python3.12

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
