-- =====================================================
-- RECOMENDA√á√ïES DE √çNDICES PARA OTIMIZA√á√ÉO
-- =====================================================
-- An√°lise baseada na estrutura atual e padr√µes de uso identificados
-- Foco em consultas de usu√°rios, hierarquia e views implementadas
-- =====================================================

-- =====================================================
-- 1. √çNDICES EXISTENTES IDENTIFICADOS (SITUA√á√ÉO ATUAL)
-- =====================================================

/*
ESTRUTURA ATUAL DE √çNDICES:

üìã USERS (Bem indexada):
  ‚úÖ users_pkey (id)
  ‚úÖ users_email_address_unique 
  ‚úÖ users_person_id_unique
  ‚úÖ users_is_system_admin_index
  ‚úÖ users_deleted_at_index

üìã USER_ROLES (Muito bem indexada):
  ‚úÖ user_roles_pkey (id)
  ‚úÖ user_roles_user_id_index
  ‚úÖ user_roles_role_id_index  
  ‚úÖ user_roles_user_id_context_type_context_id_index
  ‚úÖ user_roles_deleted_at_index
  ‚úÖ idx_user_roles_context_type_id

üìã USER_ESTABLISHMENTS (Bem indexada):
  ‚úÖ user_establishments_pkey (id)
  ‚úÖ idx_user_establishments_user_id
  ‚úÖ idx_user_establishments_establishment_id
  ‚úÖ idx_user_establishments_deleted_at
  ‚úÖ idx_user_establishments_primary

üìã PEOPLE (Adequadamente indexada):
  ‚úÖ people_pkey (id)
  ‚úÖ people_tax_id_unique
  ‚úÖ people_name_index
  ‚úÖ people_person_type_index
  ‚úÖ people_deleted_at_index

üìã ESTABLISHMENTS (Bem indexada):
  ‚úÖ establishments_pkey (id)
  ‚úÖ establishments_company_id_index
  ‚úÖ establishments_person_id_index
  ‚úÖ establishments_deleted_at_index

üìã COMPANIES (Adequadamente indexada):
  ‚úÖ companies_pkey (id)
  ‚úÖ companies_person_id_unique
  ‚úÖ companies_deleted_at_index
*/

-- =====================================================
-- 2. √çNDICES ADICIONAIS RECOMENDADOS PARA OTIMIZA√á√ÉO
-- =====================================================

-- 2.1 √çNDICES PARA VIEWS DE USU√ÅRIOS COMPLETOS
-- =====================================================

-- Otimizar ORDER BY das views (user_id, is_primary, is_principal, level)
CREATE INDEX IF NOT EXISTS idx_user_establishments_user_primary_order 
ON master.user_establishments (user_id, is_primary DESC, deleted_at) 
WHERE deleted_at IS NULL;

-- Otimizar filtros de estabelecimentos ativos
CREATE INDEX IF NOT EXISTS idx_establishments_active_principal 
ON master.establishments (is_active, is_principal DESC, company_id) 
WHERE deleted_at IS NULL;

-- Otimizar busca por roles ativos com level
CREATE INDEX IF NOT EXISTS idx_roles_active_level 
ON master.roles (is_active, level ASC) 
WHERE is_active = true;

-- 2.2 √çNDICES PARA HIERARQUIA DE PERMISS√ïES
-- =====================================================

-- Otimizar busca por context_type + level (para hierarquia)
CREATE INDEX IF NOT EXISTS idx_user_roles_context_level 
ON master.user_roles (user_id, context_type, deleted_at) 
INCLUDE (context_id, role_id)
WHERE deleted_at IS NULL;

-- Otimizar role levels para verifica√ß√µes hier√°rquicas
CREATE INDEX IF NOT EXISTS idx_roles_context_level_hierarchy 
ON master.roles (context_type, level DESC, is_active)
WHERE is_active = true;

-- Index para fun√ß√µes de controle de acesso (get_accessible_users_hierarchical)
CREATE INDEX IF NOT EXISTS idx_user_roles_level_context_active 
ON master.user_roles (user_id, deleted_at) 
INCLUDE (context_type, context_id, role_id)
WHERE deleted_at IS NULL;

-- 2.3 √çNDICES PARA SISTEMA DE SESS√ïES E TROCA DE PERFIL
-- =====================================================

-- √çndices para tabela user_sessions (j√° foram criados no script anterior, mas listando aqui)
CREATE INDEX IF NOT EXISTS idx_user_sessions_user_active 
ON master.user_sessions (user_id, is_active, expires_at);

CREATE INDEX IF NOT EXISTS idx_user_sessions_token_active 
ON master.user_sessions (session_token, is_active) 
WHERE is_active = true AND expires_at > CURRENT_TIMESTAMP;

CREATE INDEX IF NOT EXISTS idx_user_sessions_context_active 
ON master.user_sessions (active_context_type, active_context_id, is_active)
WHERE is_active = true;

-- 2.4 √çNDICES PARA CONSULTAS DE NEG√ìCIO FREQUENTES  
-- =====================================================

-- Buscar usu√°rios por estabelecimento (comum em filtros)
CREATE INDEX IF NOT EXISTS idx_user_establishments_estab_active_users 
ON master.user_establishments (establishment_id, deleted_at) 
INCLUDE (user_id, is_primary, status)
WHERE deleted_at IS NULL;

-- Buscar usu√°rios por empresa (via estabelecimentos)
CREATE INDEX IF NOT EXISTS idx_establishments_company_active 
ON master.establishments (company_id, deleted_at, is_active) 
INCLUDE (id)
WHERE deleted_at IS NULL AND is_active = true;

-- Otimizar join people -> users (comum nas views)
CREATE INDEX IF NOT EXISTS idx_people_users_join 
ON master.people (id, deleted_at) 
INCLUDE (name, person_type, tax_id)
WHERE deleted_at IS NULL;

-- 2.5 √çNDICES PARA AUDITORIA E LOG
-- =====================================================

-- Otimizar consultas de auditoria por data
CREATE INDEX IF NOT EXISTS idx_user_data_access_log_date_user 
ON master.user_data_access_log (created_at DESC, accessed_by_user_id);

CREATE INDEX IF NOT EXISTS idx_context_switches_date_user 
ON master.context_switches (created_at DESC, user_id);

-- Buscar logs por usu√°rio espec√≠fico
CREATE INDEX IF NOT EXISTS idx_context_switches_session_date 
ON master.context_switches (session_id, created_at DESC);

-- 2.6 √çNDICES PARCIAIS PARA CASOS ESPEC√çFICOS
-- =====================================================

-- Apenas usu√°rios ativos (filtra 90%+ das consultas)
CREATE INDEX IF NOT EXISTS idx_users_active_only 
ON master.users (id, person_id, email_address, is_system_admin) 
WHERE deleted_at IS NULL AND is_active = true;

-- Apenas roles de sistema (super_admin, etc)
CREATE INDEX IF NOT EXISTS idx_user_roles_system_context 
ON master.user_roles (user_id, role_id, context_id) 
WHERE context_type = 'system' AND deleted_at IS NULL;

-- Apenas admins de empresa (level >= 80)
CREATE INDEX IF NOT EXISTS idx_user_roles_company_admins 
ON master.user_roles ur 
USING btree (user_id, context_id, deleted_at)
WHERE context_type = 'company' AND deleted_at IS NULL
  AND EXISTS (SELECT 1 FROM master.roles r WHERE r.id = ur.role_id AND r.level >= 80);

-- =====================================================
-- 3. √çNDICES COMPOSTOS PARA QUERIES ESPEC√çFICAS DAS VIEWS
-- =====================================================

-- Para vw_users_complete (join otimizado)
CREATE INDEX IF NOT EXISTS idx_users_complete_view_optimization 
ON master.users (id, person_id, deleted_at, is_active, is_system_admin)
WHERE deleted_at IS NULL;

-- Para fun√ß√£o get_accessible_users_hierarchical
CREATE INDEX IF NOT EXISTS idx_hierarchy_access_optimization 
ON master.user_establishments (user_id, establishment_id, deleted_at, is_primary)
INCLUDE (status, permissions)
WHERE deleted_at IS NULL;

-- Para filtros por contexto hierarchical
CREATE INDEX IF NOT EXISTS idx_context_hierarchy_lookup 
ON master.user_roles (context_type, context_id, deleted_at)
INCLUDE (user_id, role_id)
WHERE deleted_at IS NULL;

-- =====================================================
-- 4. √çNDICES DE PERFORMANCE PARA TEXT SEARCH
-- =====================================================

-- Busca por nome de pessoas (autocomplete)
CREATE INDEX IF NOT EXISTS idx_people_name_text_search 
ON master.people USING gin(to_tsvector('portuguese', name))
WHERE deleted_at IS NULL;

-- Busca por email (autocomplete para admins)
CREATE INDEX IF NOT EXISTS idx_users_email_text_search 
ON master.users USING gin(to_tsvector('portuguese', email_address))
WHERE deleted_at IS NULL AND is_active = true;

-- =====================================================
-- 5. √çNDICES PARA MANUTEN√á√ÉO E CLEANUP
-- =====================================================

-- Otimizar limpeza de sess√µes expiradas
CREATE INDEX IF NOT EXISTS idx_user_sessions_cleanup 
ON master.user_sessions (expires_at, is_active)
WHERE is_active = false OR expires_at < CURRENT_TIMESTAMP;

-- Otimizar limpeza de logs antigos
CREATE INDEX IF NOT EXISTS idx_audit_logs_cleanup 
ON master.user_data_access_log (created_at)
WHERE created_at < CURRENT_TIMESTAMP - INTERVAL '90 days';

-- =====================================================
-- 6. ESTAT√çSTICAS E MONITORAMENTO RECOMENDADO
-- =====================================================

-- Script para monitorar uso dos √≠ndices
/*
-- Verificar uso dos √≠ndices
SELECT 
    schemaname,
    tablename,
    indexname,
    idx_scan as index_scans,
    idx_tup_read as tuples_read,
    idx_tup_fetch as tuples_fetched
FROM pg_stat_user_indexes 
WHERE schemaname = 'master' 
    AND tablename IN ('users', 'user_roles', 'user_establishments')
ORDER BY idx_scan DESC;

-- Verificar √≠ndices n√£o utilizados (candidatos para remo√ß√£o)
SELECT 
    schemaname,
    tablename,
    indexname,
    idx_scan
FROM pg_stat_user_indexes 
WHERE schemaname = 'master' 
    AND idx_scan = 0
    AND NOT indexname LIKE '%pkey';
*/

-- =====================================================
-- 7. AN√ÅLISE DE IMPACTO E PRIORIDADE
-- =====================================================

/*
PRIORIDADE ALTA (implementar primeiro):
‚úÖ idx_user_establishments_user_primary_order - Para views principais
‚úÖ idx_user_roles_context_level - Para hierarquia
‚úÖ idx_users_active_only - Filtra maioria das consultas
‚úÖ idx_establishments_company_active - Para joins empresa-estabelecimento

PRIORIDADE M√âDIA:
‚úÖ idx_roles_context_level_hierarchy - Para valida√ß√µes hier√°rquicas  
‚úÖ idx_user_establishments_estab_active_users - Para filtros por estabelecimento
‚úÖ idx_people_name_text_search - Para autocomplete

PRIORIDADE BAIXA (monitorar necessidade):
‚úÖ idx_context_switches_date_user - Apenas se auditoria for muito consultada
‚úÖ idx_user_sessions_cleanup - Para manuten√ß√£o automatizada
‚úÖ √çndices de texto - Se busca textual for implementada

OBSERVA√á√ïES:
- A estrutura atual J√Å √© muito bem indexada
- Muitos √≠ndices j√° cobrem os casos de uso principais  
- Implementar gradualmente e monitorar impacto
- Alguns √≠ndices podem ser desnecess√°rios dependendo do volume
*/

-- =====================================================
-- 8. COMANDOS DE IMPLEMENTA√á√ÉO SEGURA
-- =====================================================

-- Implementar durante baixa utiliza√ß√£o:
-- CREATE INDEX CONCURRENTLY quando poss√≠vel
-- Monitorar espa√ßo em disco antes da cria√ß√£o
-- Verificar planos de execu√ß√£o antes/depois

-- Exemplo de implementa√ß√£o segura:
-- CREATE INDEX CONCURRENTLY idx_user_establishments_user_primary_order 
-- ON master.user_establishments (user_id, is_primary DESC, deleted_at) 
-- WHERE deleted_at IS NULL;